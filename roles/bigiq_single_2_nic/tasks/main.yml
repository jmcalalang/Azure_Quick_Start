# Create an F5 BIG-IQ instance with 2 NIC's

- name: Create Server {{bigIqCM}} NIC_1 in {{resource_group_name}}
  azure_rm_networkinterface:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    resource_group: "{{resource_group_name}}"
    name: "{{bigIqCM}}_mgmt_nic"
    virtual_network: "{{virtual_network_name}}"
    subnet: "management"
    ip_configurations:
      - name: ipconfig1
        private_ip_allocation_method: Dynamic
        public_ip_address_name: "{{bigIqCM}}-mgmt-pip0"
        primary: true

- name: Output of {{bigIqCM}}_mgmt_nic
  azure_rm_publicipaddress:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    resource_group: "{{resource_group_name}}"
    name: "{{bigIqCM}}-mgmt-pip0"
  register: "bigIqCM_mgmt_nic"

- name: Assign Fact for External Management IP
  set_fact:
    bigIqCM_mgmt_pip: "{{ bigIqCM_mgmt_nic.state.ip_address }}"

- name: Create Server {{bigIqCM}} NIC_2 in {{resource_group_name}}
  azure_rm_networkinterface:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    resource_group: "{{resource_group_name}}"
    name: "{{bigIqCM}}_ext_nic"
    virtual_network: "{{virtual_network_name}}"
    subnet: "external"
    ip_configurations:
      - name: ipconfig1
        private_ip_allocation_method: Dynamic
        public_ip_address_name: "{{bigIqCM}}-ext-pip0"

- name: Edit Security Group {{bigIqCM}}_mgmt_nic in {{resource_group_name}} (Allow Management Access)
  azure_rm_securitygroup:
      tenant: "{{ tenantId }}"
      client_id: "{{ clientId }}"
      secret: "{{ servicePrincipalSecret }}"
      subscription_id: "{{ subscriptionId }}"
      resource_group: "{{resource_group_name}}"
      name: "{{bigIqCM}}_mgmt_nic"
      purge_rules: yes
      rules:
          - name: 'AllowHTTPS'
            protocol: Tcp
            source_address_prefix: '{{restrictedSrcAddress}}'
            destination_port_range: "443"
            access: Allow
            priority: 100
            direction: Inbound
          - name: 'AllowSSH'
            protocol: Tcp
            source_address_prefix: '{{restrictedSrcAddress}}'
            destination_port_range: 22
            access: Deny
            priority: 101
            direction: Inbound

- name: Edit Security Group {{bigIqCM}}_ext_nic in {{resource_group_name}} (Deny All Access)
  azure_rm_securitygroup:
      tenant: "{{ tenantId }}"
      client_id: "{{ clientId }}"
      secret: "{{ servicePrincipalSecret }}"
      subscription_id: "{{ subscriptionId }}"
      resource_group: "{{resource_group_name}}"
      name: "{{bigIqCM}}_ext_nic"
      purge_rules: yes
      rules:
          - name: 'AllowSSH'
            protocol: Tcp
            source_address_prefix: '{{restrictedSrcAddress}}'
            destination_port_range: 22
            access: Deny
            priority: 101
            direction: Inbound

- name: Create Server {{bigIqCM}} Virtual Machine
  azure_rm_virtualmachine:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    location: "{{location}}"
    resource_group: "{{resource_group_name}}"
    name: "{{bigIqCM}}"
    vm_size: Standard_D4s_v3
    admin_username: "{{bigIqCMAdmin}}"
    admin_password: "{{bigIqCMPassword}}"
    network_interface_names:
      - "{{bigIqCM}}_mgmt_nic"
      - "{{bigIqCM}}_ext_nic"
    managed_disk_type: Premium_LRS
    image:
      offer: f5-big-iq
      publisher: f5-networks
      sku: f5-bigiq-virtual-edition-byol
      version: latest
    plan:
      name: f5-bigiq-virtual-edition-byol
      product: f5-big-iq
      publisher: f5-networks

- name: Wait for {{bigIqCM}} to be available
  uri:
    url: "https://{{ bigIqCM_mgmt_pip }}/info/system"
    method: GET
    return_content: yes
    status_code: 200
    body_format: json
  register: bigIqCM_status
#  until: bigIqCM_status.available == "true"
  retries: 10
  delay: 6

- debug:
    msg: "{{bigIqCM_status}}"

#- name: Wait for {{bigIqCM}} to be available
#  uri:
#    url: "https://{{ bigIqCM_mgmt_pip }}/info/system"
#    validate_certs: no
#  register: status
#  until: status is success and status.json.available|True
#  retries: 10
#  delay: 6

- name: Execute VM Extension for Server {{bigIqCM}}
  azure_rm_virtualmachine_extension:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    location: "{{location}}"
    name: Enable_Basic_Auth
    resource_group: "{{resource_group_name}}"
    virtual_machine_name: "{{bigIqCM}}"
    publisher: Microsoft.Azure.Extensions
    virtual_machine_extension_type: CustomScript
    type_handler_version: 2.0
    settings: '{"commandToExecute": "set-basic-auth on"}'
    auto_upgrade_minor_version: true

- name: Webhook Notification to Teams for Build of BIG-IQ {{bigIqCM}}
  delegate_to: localhost
  uri:
    body:
      ? "@context"
      : "http://schema.org/extensions"
      ? "@type"
      : MessageCard
      potentialAction:
        -
          ? "@type"
          : OpenUri
          name: "BIG-IQ"
          targets:
            -
              os: default
              uri: "https://{{ bigIqCM_mgmt_pip }}"
      text: "Click **BIG-IQ Button** to be taken to the BIG-IQ!"
      themeColor: 0072C6
      title: "New BIG-IQ Created in Resource Group {{resource_group_name}}"
    body_format: json
    method: POST
    status_code: 200
    url: "{{teams_webhook}}"
    validate_certs: false
