# Create or update Service 4; AS3 Build Advanced HTTPS/WAF Application

- name: Wait a maximum of 300 seconds for BIG-IP to be ready to take configuration
  bigip_wait:
    timeout: 300
    password: "{{BIGIPadminPassword}}"
    server: "{{resource_group_name}}.{{location}}.cloudapp.azure.com"
    user: "{{BIGIPadminUsername}}"
    validate_certs: no
  delegate_to: localhost

- name: Provision ASM at "nominal" level
  bigip_provision:
    server: "{{resource_group_name}}.{{location}}.cloudapp.azure.com"
    module: asm
    level: nominal
    password: "{{BIGIPadminPassword}}"
    user: "{{BIGIPadminUsername}}"
    validate_certs: no
  delegate_to: localhost

- name: Import and Activate {{ serviceName }} ASM policy
  bigip_asm_policy:
    server: "{{resource_group_name}}.{{location}}.cloudapp.azure.com"
    user: "{{BIGIPadminUsername}}"
    password: "{{BIGIPadminPassword}}"
    name: "{{ serviceName }}_WAF"
    file: "{{ wafPolicy }}"
    active: yes
    state: present
    validate_certs: no
  delegate_to: localhost

- name: Add an iAppLX Package for Application Services 3
  bigip_iapplx_package:
    package: "{{ AS3package }}"
    password: "{{BIGIPadminPassword}}"
    server: "{{resource_group_name}}.{{location}}.cloudapp.azure.com"
    state: present
    user: "{{BIGIPadminUsername}}"
    validate_certs: no
  delegate_to: localhost

- name: Get BIG-IP Authentication Token from {{resource_group_name}}.{{location}}.cloudapp.azure.com
  delegate_to: localhost
  uri:
    body: '{"username":"{{BIGIPadminUsername}}","password":"{{BIGIPadminPassword}}","loginProvidername":"tmos"}'
    body_format: json
    method: POST
    url: "https://{{resource_group_name}}.{{location}}.cloudapp.azure.com/mgmt/shared/authn/login"
    status_code: 200
    validate_certs: no
  register: bigip_auth_response

- name: Assign Auth Token to Variable
  set_fact:
    bigip_auth_token: "{{ bigip_auth_response.json.token.token }}"

- name: Prepare the AS3 declaration
  template: src="{{ role_path }}/files/{{ serviceName }}_template.json" dest="{{ role_path }}/files/{{ serviceName }}_declaration.json"
  delegate_to: localhost

- name: Create or update {{ serviceName }} (AS3 Build HTTPS/WAF Application) from AS3
  delegate_to: localhost
  uri:
    body: "{{ lookup('file','{{ role_path }}/files/' + '{{ serviceName }}_declaration.json') }}"
    body_format: json
    headers:
      X-F5-Auth-Token: "{{ bigip_auth_token }}"
    method: POST
    status_code: 200
    url: "https://{{resource_group_name}}.{{location}}.cloudapp.azure.com/mgmt/shared/appsvcs/declare"
    validate_certs: no

- name: Edit Security Group {{resource_group_name}}-ext-nsg in {{resource_group_name}}
  azure_rm_securitygroup:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    resource_group: "{{resource_group_name}}"
    name: "{{resource_group_name}}-ext-nsg"
    purge_rules: no
    rules:
      - name: 'AllowHTTPS'
        protocol: Tcp
        source_address_prefix: '{{restrictedSrcAddress}}'
        destination_port_range: 443
        access: Allow
        priority: 101
        direction: Inbound

- name: Webhook Notification to Teams for Build of {{ serviceName }}
  delegate_to: localhost
  uri:
    body: { "@context": "http://schema.org/extensions", "@type": "MessageCard", "themeColor": "0072C6", "title": "{{ serviceName }} has been created on {{resource_group_name}}.{{location}}.cloudapp.azure.com", "text": "Click **{{ serviceName }} Button** to be taken to the {{ serviceName }} Application", "potentialAction": [{ "@type": "OpenUri", "name": "Service 4", "targets": [{ "os": "default", "uri": "http://{{resource_group_name}}3.{{location}}.cloudapp.azure.com" }] }] }
    body_format: json
    method: POST
    status_code: 200
    url: "{{teams_webhook}}"
    validate_certs: no
