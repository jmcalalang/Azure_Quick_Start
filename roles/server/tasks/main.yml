# Create or update a Application Virtual Machine

- name: Create {{application_server_name}} Storage Account in Resource Group {{resource_group_name}}
  azure_rm_storageaccount:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    location: "{{location}}"
    resource_group: "{{resource_group_name}}"
    name: "{{application_storage_account}}"
    account_type: Standard_LRS

- name: Create {{application_server_name}} Internal NIC in Resource Group {{resource_group_name}}
  azure_rm_networkinterface:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    resource_group: "{{resource_group_name}}"
    name: "{{application_server_name}}_int_nic"
    virtual_network: "{{virtual_network_name}}"
    subnet: "{{internal_subnet}}"
    ip_configurations:
      - name: ipconfig1
        private_ip_allocation_method: Dynamic
        public_ip_address_name: "{{application_server_name}}-ext-pip0"
  register: "app_server_int_nic_private"

- name: Edit {{application_server_name}}_int_nic Security Group in Resource Group {{resource_group_name}} (Allow HTTP(S) Access)
  azure_rm_securitygroup:
      tenant: "{{ tenantId }}"
      client_id: "{{ clientId }}"
      secret: "{{ servicePrincipalSecret }}"
      subscription_id: "{{ subscriptionId }}"
      resource_group: "{{resource_group_name}}"
      name: "{{application_server_name}}_int_nic"
      purge_rules: yes
      rules:
          - name: 'AllowHTTP'
            protocol: Tcp
            source_address_prefix: 'VirtualNetwork'
            destination_port_range: "80-84"
            access: Allow
            priority: 100
            direction: Inbound
          - name: 'AllowHTTPS'
            protocol: Tcp
            source_address_prefix: 'VirtualNetwork'
            destination_port_range: "443-444"
            access: Allow
            priority: 101
            direction: Inbound
          - name: 'AllowSSH'
            protocol: Tcp
            source_address_prefix: '{{restrictedSrcAddress}}'
            destination_port_range: 22
            access: Deny
            priority: 102
            direction: Inbound

- name: Create {{application_server_name}} Virtual Machine
  azure_rm_virtualmachine:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    location: "{{location}}"
    resource_group: "{{resource_group_name}}"
    name: "{{application_server_name}}"
    vm_size: Standard_D1_v2
    storage_account: "{{application_storage_account}}"
    storage_container: "{{application_server_name}}001"
    storage_blob: "{{application_server_name}}001.vhd"
    admin_username: "{{ApplicationAdminUsername}}"
    admin_password: "{{ApplicationAdminPassword}}"
    network_interfaces: "{{application_server_name}}_int_nic"
    append_tags: True
    tags:
      UbuntuServer: "18.04-LTS"
      Applications: "All"
    image:
      offer: UbuntuServer
      publisher: Canonical
      sku: 18.04-LTS
      version: latest

- name: Execute {{application_server_name}} Azure Extension
  azure_rm_virtualmachine_extension:
    tenant: "{{ tenantId }}"
    client_id: "{{ clientId }}"
    secret: "{{ servicePrincipalSecret }}"
    subscription_id: "{{ subscriptionId }}"
    location: "{{location}}"
    name: External-Script-to-install-Backend-Services
    resource_group: "{{resource_group_name}}"
    virtual_machine_name: "{{application_server_name}}"
    publisher: Microsoft.Azure.Extensions
    virtual_machine_extension_type: CustomScript
    type_handler_version: 2.0
    settings: '{"fileUris": ["{{applicationbuildscript}}"],"commandToExecute": "./init_web.sh"}'
    auto_upgrade_minor_version: true

- name: Assign {{bigIq01}}_int_nic Fact
  set_fact:
    application_server_int_pri_ip: "{{ app_server_int_nic_private.state.ip_configuration.private_ip_address }}"

- debug:
    msg: Registered "{{ app_server_int_nic_private.state.ip_configuration.private_ip_address }}" as Internal NIC Private IP

- name: Webhook Notification to Teams for Build of Server {{application_server_name}}
  delegate_to: localhost
  uri:
    body: "{\"text\": \"Application Server {{application_server_name}} was created in Resource Group {{resource_group_name}} with Private Address {{application_server_int_pri_ip}}!\"}"
    body_format: json
    method: POST
    status_code: 200
    url: "{{teams_webhook}}"
    validate_certs: no
